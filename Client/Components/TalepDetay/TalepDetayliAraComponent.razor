<EditForm Model="taleprequest">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mt-12">
        <div class="form">
            <div class="form-group">
                <div class="row">
                    <div class="col-md-12">
                        <label>Proje</label>
                        <InputSelect @bind-Value="taleprequest.ProjeRef" class="form-control">
                            @if (projeler != null)
                            {
                                <option value="-1">@Utils.Mesajlar.Seciniz</option>
                                @foreach (var item in projeler)
                                {
                                    <option value="@item.logref">@item.Adi</option>
                                }
                            }
                        </InputSelect>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <label>Başlangıç Tarih</label>
                        <InputDate @bind-Value="taleprequest.BaslangicTarih" class="form-control"></InputDate>
                    </div>
                    <div class="col-md-6">
                        <label>Bitiş Tarih</label>
                        <InputDate @bind-Value="taleprequest.BitisTarih" class="form-control"></InputDate>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-6">
                        <label>Talep Durumu</label>
                        <InputSelect @bind-Value="taleprequest.TalepDurumu" class="form-control">
                            @if (TalepDurumList != null)
                            {
                                <option value="-1">@Utils.Mesajlar.Seciniz</option>
                                @foreach (var item in TalepDurumList)
                                {
                                    <option value="@item.SabitDetayId">@item.Adi</option>
                                }
                            }
                        </InputSelect>
                    </div>
                    <div class="col-md-6">
                        <label>Onay Durumu</label>
                        <InputSelect @bind-Value="taleprequest.OnayDurumu" class="form-control">
                            <option value=0>Onay Bekleyenler</option>
                            <option value=1>Onayladıklarım</option>
                            <option value=2>Hepsi</option>
                        </InputSelect>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <label>Açıklama</label>
                        <InputText @bind-Value="taleprequest.SearchText" class="form-control" />
                    </div>
                </div>
            </div>

        </div>
    </div>


    <div class="form-group">
        <SaveButtonComponent Caption="Tamam" OnClick="Tamam" />
        <CancelButtonComponent Caption="Vazgeç" OnClick="Vazgec" />
    </div>

</EditForm>

@code {
    [Parameter]
    public TalepFisRequestDto mainRequest { get; set; }

    [CascadingParameter] IModalService modal { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    [Inject]
    ISnackbar Snackbar { get; set; }

    [Inject]
    ModalManager ModalManager { get; set; }

    [Inject]
    NavigationManager navigation { get; set; }

    [Inject]
    HttpClient httpClient { get; set; }

    [Inject]
    ILocalStorageService LocalStorageService { get; set; }

    [Inject]
    ProjeHelper projeHelper { get; set; }

    [Inject]
    SabitHelper sabitHelper { get; set; }

    TalepFisRequestDto taleprequest = new TalepFisRequestDto();
    List<ProjeDto> projeler = new();
    List<SisSabitlerDetayDto> TalepDurumList = new();


    protected override async Task OnInitializedAsync()
    {
        projeler = await projeHelper.LoadRecords();
        TalepDurumList = await sabitHelper.GetSabitDetay(SabitHelper.SabitTurler.TalepDurumu);

        if (mainRequest != null)
            taleprequest = mainRequest;
    }

    private async Task Tamam()
    {
        await ModalInstance.CloseAsync(ModalResult.Ok<TalepFisRequestDto>(taleprequest));
    }

    public async Task Vazgec()
    {
        await ModalInstance.CloseAsync();
    }

}
