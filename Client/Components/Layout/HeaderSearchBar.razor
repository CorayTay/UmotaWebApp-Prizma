<nav class="navbar navbar-expand-lg navbar-light bg-light">
    <a class="navbar-brand" href="#">@header.HeaderText</a>
    <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon"></span>
    </button>

    <div class="collapse navbar-collapse" id="navbarSupportedContent">
        @if (ShowButtons)
        {
            <ul class="navbar-nav ms-auto">
                <li class="nav-item">
                    <button class="btn btn-primary" @onclick="AddNewClicked"><i class="fa fa-plus"></i>Yeni Ekle</button>
                </li>
            </ul>
        }

        @if (ShowSearchSection || ShowFilterButton)
        {

            <ul class="nav navbar-nav ms-auto">
                <li>
                    <EditForm Model="header" class="form-inline my-2 my-lg-0">

                        @if (ShowSearchSection)
                        {
                            <InputText @bind-Value="header.SearchText" class="form-control mr-sm-2" />
                            <button class="btn btn-outline-success my-2 my-sm-0" @onclick="SearchClicked">@ButonText</button>
                        }
                        @if (ShowFilterButton)
                        {
                            <button class="btn btn-outline-success my-2 my-sm-0 ml-1" @onclick="FilterClicked">Filtre</button>
                        }
                    </EditForm>

                </li>
            </ul>




        }

    </div>
</nav>

@code {

    [Inject]
    ModalManager ModalManager { get; set; }


    [Parameter]
    public HeaderBarSearch header { get; set; }

    [Parameter]
    public bool ShowSearchSection { get; set; }

    [Parameter]
    public bool ShowButtons { get; set; }

    [Parameter]
    public bool ShowFilterButton { get; set; }

    public string ButonText = "Ara";

    [Parameter]
    public EventCallback onDoneButtonClicked { get; set; }

    [Parameter]
    public EventCallback onAddNewButtonClicked { get; set; }

    [Parameter]
    public EventCallback onFilterButtonClicked { get; set; }

    protected async Task SearchClicked()
    {
        ButonText = "Aranıyor...";
        await onDoneButtonClicked.InvokeAsync();
        ButonText = "Ara";
    }

    protected async Task AddNewClicked()
    {
        await onAddNewButtonClicked.InvokeAsync();
    }

    protected async Task FilterClicked()
    {
        await onFilterButtonClicked.InvokeAsync();
    }


}
