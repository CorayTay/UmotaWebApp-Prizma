@inherits LayoutComponentBase
@*<MudThemeProvider />

    <div class="page">
        <div class="sidebar">
            <NavMenu />
        </div>

        <div class="main">
            <div class="top-row px-4">
                <button type="button" class="btn btn-primary" @onclick="ShowKullaniciKart">@loginStr</button>
                <button type="button" class="btn btn-warning" @onclick="NavigateToExit">Çıkış</button>
            </div>

            <div class="content px-4">
                @Body
            </div>
        </div>
    </div>*@


<MudThemeProvider />
<MudSnackbarProvider />
<MudDialogProvider />

<MudLayout>
    <MudAppBar Elevation="1">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudText Typo="Typo.h5" Class="ml-3">UNO Endüstriyel</MudText>
        <MudSpacer />
        <MudButton Variant="Variant.Filled" Color="Color.Tertiary" OnClick="ShowDonemFirmalar">@_selectedFirma</MudButton>
        <MudText Typo="Typo.h5" Class="ml-3">&nbsp;</MudText>
        <MudAvatar Color="Color.Tertiary">@_avatarName</MudAvatar>
        <MudIconButton Icon="@Icons.Material.Filled.Logout" OnClick="NavigateToExit"></MudIconButton>
        @*<MudIconButton Icon="@Icons.Material.Filled.MoreVert" Color="Color.Inherit" Edge="Edge.End" />*@

    </MudAppBar>
    <MudDrawer @bind-Open="_drawerOpen" ClipMode="DrawerClipMode.Always" Elevation="2" Variant="DrawerVariant.Temporary">
        <NavMenu2 />
    </MudDrawer>
    <MudMainContent>
        <div class="content px-4">
            @Body
        </div>

    </MudMainContent>
</MudLayout>

@code {

    [CascadingParameter]
    public Task<AuthenticationState> AuthState { get; set; }

    public string loginStr = "About";

    [Inject]
    ILocalStorageService localStorage { get; set; }

    [Inject]
    NavigationManager NavigationManager { get; set; }

    [Inject]
    ModalManager modalManager { get; set; }

    [Inject]
    HttpClient httpClient { get; set; }

    bool _drawerOpen = true;

    string _avatarName = "";
    string _selectedFirma = "";

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }


    protected async override Task OnInitializedAsync()
    {
        var authState = await AuthState;

        if (authState.User.Identity.IsAuthenticated)
        {
            loginStr = await localStorage.GetItemAsStringAsync("kullanicikodu");
            loginStr = loginStr.Replace("\"", "");

            _avatarName = loginStr.ToUpper().Substring(0, 1);

            var selectedFirmaDonem = await localStorage.GetItemAsync<SisFirmaDonemDto>(Consts.FirmaDonem);

            _selectedFirma = selectedFirmaDonem.aciklama;
        }
        else
        {
            NavigationManager.NavigateTo("login");
        }
    }

    public async Task NavigateToExit()
    {
        var exitConfirmed = await modalManager.ShowConfirmationAsync("Çıkış", "Uygulamadan çıkmak üzeresiniz. Emin misiniz ?", "Çıkış Yap", "İptal");

        if (exitConfirmed)
        {
            await localStorage.RemoveItemAsync(Consts.KullaniciKodu);
            await localStorage.RemoveItemAsync(Consts.FirmaDonem);
            await localStorage.RemoveItemAsync(Consts.FirmaDonemYetki);
            await localStorage.RemoveItemAsync(Consts.Token);

            NavigationManager.NavigateTo("login");
        }

    }

    public async Task ShowKullaniciKart()
    {
        var kod = await localStorage.GetItemAsStringAsync(Consts.KullaniciKodu);
        kod = kod.Replace("'", "");

        var kullanici = await httpClient.GetServiceResponseAsync<SisKullaniciDto>("/api/kullanici/GetByKod?kod=" + kod);

        if (kullanici != null)
        {
            string bilgi = string.Format("{0}, E-Mail : {1}, Yetki Kodu : {2} Son Giriş Tarihi : {3}",
                kullanici.KullaniciAdi, kullanici.MailAdres, kullanici.KullaniciYetkiKodu, kullanici.SonGirisTarihi.Value);
            await modalManager.ShowMessageAsync("Kullanıcı Bilgi", bilgi);
        }
    }


    public void ShowDonemFirmalar()
    {
        NavigationManager.NavigateTo("/donemfirmasec");
    }
}
