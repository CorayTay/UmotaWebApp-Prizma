@page "/stek_listef"

<HeaderSearchBar header="header" onAddNewButtonClicked="YeniTeklif" 
                 ShowButtons="true"
                 onDoneButtonClicked="TeklifAra" ShowSearchSection="true"></HeaderSearchBar>

<div class="table-responsive" style="overflow-x: auto;max-width:1200px;font-size:x-small">
    <table class="table table-hover table-sm">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Teklif No</th>
                <th scope="col">Tarih</th>
                <th scope="col">Cari</th>
                <th scope="col">Cari Kodu</th>
                <th scope="col">Personel Adı</th>
                <th scope="col">Teslim Şekli</th>
                <th scope="col">Teslim Tarihi</th>
                <th scope="col">Döviz Kuru</th>
                <th scope="col">Tutar</th>
                <th scope="col">Tutar TL</th>
                <th scope="col">Tutar RD</th>
                <th scope="col">Tutar Matrah</th>
                <th scope="col">Tutar Matrah TL</th>
                <th scope="col">Tutar Matrah RD</th>
                <th scope="col">Durum</th>
            </tr>
        </thead>
        <tbody>
            @if (teklifler != null)
            {
                @foreach (var item in teklifler)
                {
                    <tr>
                        <td>
                            <CustomEditButtonComponent IsSmall="true" IsOutline="true" Caption="" OnClick="(() => TeklifDetay(item.Logref))"></CustomEditButtonComponent>
                        </td>
                        <td>@item.Teklifno</td>
                        <td>@(item.Tarih.HasValue ? item.Tarih.Value.ToString("dd.MM.yyyy") : "-")</td>
                        <td>@item.LcariAdi</td>
                        <td>@item.LcariKodu</td>
                        <td>@item.Lpersoneladi</td>
                        <td>@item.TeslimSekli</td>
                        <td>@(item.TeslimTarihi.HasValue ? item.TeslimTarihi.Value.ToString("dd.MM.yyyy") : "-")</td>
                        <td>@(item.Dovizkuru.HasValue ? item.Dovizkuru.Value.ToString("0.##") : "-")</td>
                        <td>@(item.Tutar.HasValue ? item.Tutar.Value.ToString("0.##") : "-")</td>
                        <td>@(item.Tutartl.HasValue ? item.Tutartl.Value.ToString("0.##") : "-")</td>
                        <td>@(item.Tutarrd.HasValue ? item.Tutarrd.Value.ToString("0.##") : "-")</td>
                        <td>@(item.Tutarmatrah.HasValue ? item.Tutarmatrah.Value.ToString("0.##") : "-")</td>
                        <td>@(item.Tutarmatrahtl.HasValue ? item.Tutarmatrahtl.Value.ToString("0.##") : "-")</td>
                        <td>@(item.Tutarmatrahrd.HasValue ? item.Tutarmatrahrd.Value.ToString("0.##") : "-")</td>
                        <td>@item.Duruminfo</td>
                    </tr>
                }}

        </tbody>
    </table>

</div>

@code {

    [Inject]
    ModalManager ModalManager { get; set; }

    [Inject]
    NavigationManager navigation { get; set; }

    [Inject]
    HttpClient httpClient { get; set; }

    public List<TeklifDto> teklifler { get; set; }

    public HeaderBarSearch header = new HeaderBarSearch();

    protected override async Task OnInitializedAsync()
    {
        header.HeaderText = "Teklif Listesi";
        await LoadTeklifler();
    }

    private async Task LoadTeklifler()
    {
        teklifler = await httpClient.GetServiceResponseAsync<List<TeklifDto>>("/api/teklif/list");
        teklifler = teklifler.OrderByDescending(i => i.Insdate).ToList();
    }

    public void TeklifDetay(int logref)
    {
        navigation.NavigateTo("/stek_listef_detay/" + logref.ToString());
    }

    public void YeniTeklif()
    {
        navigation.NavigateTo("/stek_listef_ekle");
    }

    private async Task TeklifAra()
    {
        var teklifSearch = new TeklifDto();
        teklifSearch.Aciklama1 = header.SearchText;

        var result = await httpClient.PostGetServiceResponseAsync<List<TeklifDto>, TeklifDto>("/api/teklif/search", teklifSearch);
        if (result == null || result.Count == 0)
        {
            await ModalManager.ShowMessageAsync("Arama", "Aradığınız kritere göre teklif bulunamadı.\n Lütfen detaylı aramayı seçiniz");
            return;
        }

        teklifler = result;

    }
}
