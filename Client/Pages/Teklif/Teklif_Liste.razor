@page "/stek_listef"

<HeaderSearchBar header="header" onAddNewButtonClicked="YeniTeklif" 
                 ShowButtons="true"
                 onDoneButtonClicked="TeklifAra" ShowSearchSection="true"></HeaderSearchBar>


<MudTable Items="@teklifler" Dense="true" Hover="true" Bordered="true" Striped="true" Filter="new Func<TeklifDto,bool>(FilterFunc1)">
    <ToolBarContent>
        <MudText Typo="Typo.h6">Teklif Listesi</MudText>
        <MudSpacer />
        <MudTextField @bind-Value="_searchString" Placeholder="Search" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
    </ToolBarContent>
    <HeaderContent>
        <MudTh>#</MudTh>
        <MudTh>Teklif No</MudTh>
        <MudTh>Proje Adı</MudTh>
        <MudTh>Durum</MudTh>
        <MudTh>Tarih</MudTh>
        <MudTh>Teslim Tarihi</MudTh>
        <MudTh>Cari</MudTh>
        <MudTh>Cari Kodu</MudTh>
        <MudTh>İlgili Kişi</MudTh>
        <MudTh>Teslim Şekli</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
            <CustomEditButtonComponent IsSmall="true" IsOutline="true" Caption="" OnClick="(() => TeklifDetay(context.Logref))"></CustomEditButtonComponent>
        </MudTd>
        <MudTd DataLabel="Teklif No">@context.Teklifno</MudTd>
        <MudTd DataLabel="Proje">@context.Proje</MudTd>
        <MudTd DataLabel="Durum">@context.Duruminfo</MudTd>
        <MudTd DataLabel="Tarih">@context.TarihFormatted</MudTd>
        <MudTd DataLabel="Teslim Tarihi">@context.TeslimTarihiFormatted</MudTd>
        <MudTd DataLabel="Cari">@context.LcariAdi</MudTd>
        <MudTd DataLabel="Cari Kodu">@context.LcariKodu</MudTd>
        <MudTd DataLabel="İlgili Kişi">@context.Lpersoneladi</MudTd>
        <MudTd DataLabel="Teslim Şekli">@context.TeslimSekli</MudTd>
    </RowTemplate>
    <PagerContent>
        <MudTablePager />
    </PagerContent>
</MudTable>


@code {

    [Inject]
    ModalManager ModalManager { get; set; }

    [Inject]
    NavigationManager navigation { get; set; }

    [Inject]
    HttpClient httpClient { get; set; }

    public List<TeklifDto> teklifler { get; set; }

    public HeaderBarSearch header = new HeaderBarSearch();

    private string _searchString = "";
    private bool _sortNameByLength;

    private bool FilterFunc1(TeklifDto element) => FilterFunc(element, _searchString);

    private bool FilterFunc(TeklifDto element, string searchString)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Proje != null && element.Proje.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.LcariAdi != null && element.LcariAdi.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Teklifno != null && element.LcariKodu != null && element.TeslimTarihiFormatted != null
            && $"{element.Teklifno} {element.LcariKodu} {element.TeslimTarihiFormatted}".Contains(searchString))
            return true;
        return false;
    }


    protected override async Task OnInitializedAsync()
    {
        header.HeaderText = "Teklif Listesi";
        await LoadTeklifler();
    }

    private async Task LoadTeklifler()
    {
        teklifler = await httpClient.GetServiceResponseAsync<List<TeklifDto>>("/api/teklif/list");
        teklifler = teklifler.OrderByDescending(i => i.Insdate).ToList();
    }

    public void TeklifDetay(int logref)
    {
        navigation.NavigateTo("/stek_listef_detay/" + logref.ToString());
    }

    public void YeniTeklif()
    {
        navigation.NavigateTo("/stek_listef_ekle");
    }

    private async Task TeklifAra()
    {
        var teklifSearch = new TeklifDto();
        teklifSearch.Aciklama1 = header.SearchText;

        var result = await httpClient.PostGetServiceResponseAsync<List<TeklifDto>, TeklifDto>("/api/teklif/search", teklifSearch);
        if (result == null || result.Count == 0)
        {
            await ModalManager.ShowMessageAsync("Arama", "Aradığınız kritere göre teklif bulunamadı.\n Lütfen detaylı aramayı seçiniz");
            return;
        }

        teklifler = result;

    }
}
