@page "/stek_listef_detay/{logref:int}"

<div class="card" style="width: 100%;">
    <div class="card-body">
        <h5 class="card-title">Teklif Numarası : @teklif.Teklifno</h5>
        <h6 class="card-subtitle mb-2 text-muted">
            Teklif Tarihi : @(teklif.Tarih.HasValue ? teklif.Tarih.Value.ToString("dd.MM.yyyy") : "")
            / Teslim Tarihi : @(teklif.TeslimTarihi.HasValue ? teklif.TeslimTarihi.Value.ToString("dd.MM.yyyy") : "")
        </h6>
        <p class="card-text">
            <strong>Proje Adı:</strong> @teklif.Proje
            <strong>İlgili Kişi:</strong> @teklif.IlgiliAdi
            <strong>Açıklama :</strong> @teklif.Aciklama1
        </p>

        <button class="btn btn-primary" @onclick="Duzenle"><i class="fa fa-edit"></i> Düzenle</button>
        <button class="btn btn-primary" @onclick="MalzemeKartListesiAc"><i class="fa fa-plus"></i> Malzeme Ekle</button>
    </div>
</div>

@code {
    [Parameter]
    public int logref { get; set; }

    [CascadingParameter] IModalService modal { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }
    [CascadingParameter] ModalParameters modalParameters { get; set; }

    [Inject]
    ModalManager ModalManager { get; set; }

    [Inject]
    NavigationManager navigation { get; set; }

    [Inject]
    HttpClient httpClient { get; set; }

    [Inject]
    ILocalStorageService LocalStorageService { get; set; }

    [Inject]
    ISnackbar Snackbar { get; set; }

    public TeklifDto teklif = new TeklifDto();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    private async Task LoadData()
    {
        var result = await httpClient.GetServiceResponseAsync<TeklifDto>("/api/teklif/get?logref=" + logref);
        if (result != null)
        {
            teklif = result;
        }
    }

    public async Task Duzenle()
    {

        modalParameters = new ModalParameters();
        modalParameters.Add("logRef", logref);

        var duzenleForm = modal.Show<TeklifEkleGuncelleComponent>("Teklif Güncelle", parameters: modalParameters);

        var result = await duzenleForm.Result;

        await LoadData();

    }

    public async Task MalzemeKartListesiAc()
    {
        var malzKartForm = modal.Show<Pages.Malzeme.Malzeme_Sec>();
        var result = await malzKartForm.Result;

        if (!result.Cancelled)
        {
            if (result.Data != null)
            {
                var secim = (MalzemeKartDto)result.Data;

                Snackbar.Add("Malzeme Kartı eklendi : " + secim.Adi);
            }

        }
    }
}
