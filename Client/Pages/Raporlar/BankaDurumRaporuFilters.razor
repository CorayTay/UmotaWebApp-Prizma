<EditForm Model="raporrequest">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="mt-12">
        <div class="form">

            <div class="form-group">
                <div class="row">
                    <div class="col-md-10">
                        <label>Rapor Tarihi</label>
                        <InputDate @bind-Value="raporrequest.RaporTarihi" class="form-control"></InputDate>
                    </div>
                </div>
            </div>



        </div>
    </div>


    <div class="form-group">
        <SaveButtonComponent Caption="Tamam" OnClick="Tamam" />
        <CancelButtonComponent Caption="Vazgeç" OnClick="Vazgec" />
    </div>

</EditForm>

@code {
    [CascadingParameter] IModalService modal { get; set; }
    [CascadingParameter] BlazoredModalInstance ModalInstance { get; set; }

    [Inject]
    ISnackbar Snackbar { get; set; }

    [Inject]
    ModalManager ModalManager { get; set; }

    [Inject]
    NavigationManager navigation { get; set; }

    [Inject]
    HttpClient httpClient { get; set; }

    [Inject]
    ILocalStorageService LocalStorageService { get; set; }

    BankaDurumRaporuRequestDto raporrequest = new BankaDurumRaporuRequestDto();

    protected override async Task OnInitializedAsync()
    {
        raporrequest.RaporTarihi = DateTime.Now;
    }

    private async Task Tamam()
    {
        await ModalInstance.CloseAsync(ModalResult.Ok<BankaDurumRaporuRequestDto>(raporrequest));
    }

    public async Task Vazgec()
    {
        await ModalInstance.CloseAsync();
    }

}
