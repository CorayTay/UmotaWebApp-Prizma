@page "/r_carilistef"

<HeaderSearchBar header="header" onAddNewButtonClicked="CreateCariKart" onDoneButtonClicked="HeaderSearch"
                 ShowButtons="true"
                 ShowSearchSection="true"></HeaderSearchBar>


<div class="table-responsive" style="overflow-x: auto;max-width:1200px;font-size:small">
    <table class="table table-hover table-sm">
        <thead>
            <tr>
                <th scope="col">#</th>
                <th scope="col">Ref</th>
                <th scope="col">Kodu</th>
                <th scope="col">Adı</th>
                <th scope="col">Adı 2</th>
                <th scope="col">Adres 1</th>
                <th scope="col">Adres 2</th>
                <th scope="col">İLçe</th>
                <th scope="col">İl</th>
                <th scope="col">Ülke</th>
                <th scope="col">Telefon 1</th>
                <th scope="col">Telefon 2</th>
                <th scope="col">Vergi No</th>
                <th scope="col">Vergi Dairesi</th>
            </tr>
        </thead>
        <tbody>
            @if (cariler != null)
            {
                @foreach (var item in cariler)
                {
                    <tr>
                        <td>
                            <CustomEditButtonComponent IsSmall="true" IsOutline="true" Caption="" OnClick="(() => CariKartGuncelle(item.Kodu))"></CustomEditButtonComponent>
                        </td>
                        <td>@item.Logref</td>
                        <td>@item.Kodu</td>
                        <td>@item.Adi</td>
                        <td>@item.Adi2</td>
                        <td>@item.Adres1</td>
                        <td>@item.Adres2</td>
                        <td>@item.Ilce</td>
                        <td>@item.Ulke</td>
                        <td>@item.Il</td>
                        <td>@item.Tel1</td>
                        <td>@item.Tel2</td>
                        <td>@item.Vdno</td>
                        <td>@item.Vdadi</td>
                    </tr>
                }}

        </tbody>
    </table>

</div>


@code
{

    [Inject]
    ModalManager ModalManager { get; set; }

    [Inject]
    NavigationManager navigation { get; set; }

    [Inject]
    HttpClient httpClient { get; set; }

    public HeaderBarSearch header = new HeaderBarSearch();

    public List<CariKartDto> cariler { get; set; }

    protected override Task OnInitializedAsync()
    {
        header.HeaderText = "Cari Kartlar";
        return Task.CompletedTask;
    }

    public async Task HeaderSearch()
    {
        var cariAramaObj = new CariKartDto();
        cariAramaObj.Adi = header.SearchText;

        var result = await httpClient.PostGetServiceResponseAsync<List<CariKartDto>, CariKartDto>("/api/carikart/search", cariAramaObj);
        cariler = result;

        if (cariler == null || cariler.Count == 0)
        {
            await ModalManager.ShowMessageAsync("Arama", string.Format("{0} için sonuç bulunamadı",cariAramaObj.Adi));
        }
    }

    private async Task LoadCariler()
    {
        cariler = await httpClient.GetServiceResponseAsync<List<CariKartDto>>("/api/carikart/list");
        cariler = cariler.OrderByDescending(i => i.Insdate).ToList();
    }

    public void CariKartGuncelle(string kod)
    {
        navigation.NavigateTo("/r_carilistef_guncelle/" + kod);
    }

    public void CreateCariKart()
    {
        ModalManager.ModalService.Show<CariKartEkle>();
    }

}
