@page "/r_carilistef_guncelle/{CariKartRef}"

<EditForm Model="cariModel" OnValidSubmit="ValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <SaveButtonComponent Caption="Kaydet" />
        <CancelButtonComponent Caption="Vazgeç" OnClick="goBackCariList" />
    </div>

    <div class="form">
        <div class="form-group">
            <label>Ref</label>
            <InputNumber @bind-Value="cariModel.Logref" class="form-control" />
        </div>

        <div class="form-group">
            <label>Kodu</label>
            <InputText @bind-Value="cariModel.Kodu" class="form-control" />
        </div>

        <div class="form-group">
            <label>Adı</label>
            <InputText @bind-Value="cariModel.Adi" class="form-control" />
        </div>

        <div class="form-group">
            <label>Adı 2</label>
            <InputText @bind-Value="cariModel.Adi2" class="form-control" />
        </div>

        <div class="form-group">
            <label>İlçe</label>
            <InputText @bind-Value="cariModel.Ilce" class="form-control" />
        </div>

        <div class="form-group">
            <label>Şehir</label>
            <InputText @bind-Value="cariModel.Il" class="form-control" />
        </div>

        <div class="form-group">
            <label>Ülke</label>
            <InputText @bind-Value="cariModel.Ulke" class="form-control" />
        </div>

        <div class="form-group">
            <label>Telefon 1</label>
            <InputText @bind-Value="cariModel.Tel1" class="form-control" />
        </div>

        <div class="form-group">
            <label>Telefon 2</label>
            <InputText @bind-Value="cariModel.Tel2" class="form-control" />
        </div>

        <div class="form-group">
            <label>Fax</label>
            <InputText @bind-Value="cariModel.Faks" class="form-control" />
        </div>

        <div class="form-group">
            <label>E-Posta</label>
            <InputText @bind-Value="cariModel.Mail" class="form-control" />
        </div>

        <div class="form-group">
            <label>Web Sitesi</label>
            <InputText @bind-Value="cariModel.Web" class="form-control" />
        </div>

        <div class="form-group">
            <label>Özel Kod</label>
            <InputText @bind-Value="cariModel.Ozelkod" class="form-control" />
        </div>

        <div class="form-group">
            <label>Özel Kod 2</label>
            <InputText @bind-Value="cariModel.Ozelkod2" class="form-control" />
        </div>

        <div class="form-group">
            <label>Özel Kod 3</label>
            <InputText @bind-Value="cariModel.Ozelkod3" class="form-control" />
        </div>

        <div class="form-group">
            <label>Özel Kod 4</label>
            <InputText @bind-Value="cariModel.Ozelkod4" class="form-control" />
        </div>

        <div class="form-group">
            <label>Özel Kod 5</label>
            <InputText @bind-Value="cariModel.Ozelkod5" class="form-control" />
        </div>

    </div>

</EditForm>



@code
{
    [Parameter]
    public string CariKartRef { get; set; }

    [Inject]
    ModalManager ModalManager { get; set; }

    [Inject]
    NavigationManager navigation { get; set; }

    [Inject]
    HttpClient httpClient { get; set; }

    [Inject]
    ILocalStorageService LocalStorageService { get; set; }

    CariKartDto cariModel = new CariKartDto();

    public async Task Kaydet()
    {
        try
        {
            cariModel.Insuser = await LocalStorageService.GetItemAsync<string>(Consts.KullaniciKodu);
            cariModel.Insdate = DateTime.Now;

            cariModel = await httpClient.PostGetServiceResponseAsync<CariKartDto, CariKartDto>("/api/carikart/update", cariModel);

            goBackCariList();
        }
        catch (Exception ex)
        {
            await ModalManager.ShowMessageAsync("Hata", ex.Message);
        }
    }

    public async Task ValidSubmit()
    {
        await Kaydet();
    }

    void goBackCariList()
    {
        navigation.NavigateTo("/r_carilistef", forceLoad: true);
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (string.IsNullOrEmpty(CariKartRef))
            {
                await ModalManager.ShowMessageAsync("Hata", "CariKart Ref boş olamaz");
                return;
            }

            cariModel = await httpClient.GetServiceResponseAsync<CariKartDto>("/api/carikart/getbykod?kod=" + CariKartRef);

        }
        catch (Exception ex)
        {
            await ModalManager.ShowMessageAsync("Hata !", ex.Message);
        }
    }


}
